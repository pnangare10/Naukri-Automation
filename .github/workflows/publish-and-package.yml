name: Publish and Package

on:
  push:
    branches: [ main ]
    paths:
      - 'package.json'
      - 'src/**'

# Required permissions for release creation and npm publish
permissions:
  contents: write
  packages: write
  actions: read

jobs:
  publish-and-package:
    runs-on: ubuntu-latest
    
    steps:
    # Checkout code
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Required for full git history
    
    # Setup Node.js
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        registry-url: 'https://registry.npmjs.org'
        cache: 'npm'
      
    # Install dependencies
    - name: Install dependencies
      run: npm ci
      
    # Get version from package.json
    - name: Get package version
      id: get-version
      run: |
        echo "version=$(node -p "require('./package.json').version")" >> $GITHUB_OUTPUT
      
    # Publish to npm
    - name: Publish to npm
      run: npm publish --access public
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      
    # Install pkg for executable creation
    - name: Install pkg
      run: npm install pkg
      
    # Create executable
    - name: Package application
      run: |  
        mkdir -p assets
        npx pkg . --output ./assets/naukri-ninja.exe --targets node18-win-x64
      
    # Create GitHub release
    - name: Create Release
      uses: softprops/action-gh-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ steps.get-version.outputs.version }}
        name: "Release v${{ steps.get-version.outputs.version }}"
        body: |
          Automated release for Naukri Ninja
          Version: ${{ steps.get-version.outputs.version }}
          Build: ${{ github.run_number }}
          Changes:
          ${{ github.event.head_commit.message }}
        files: |
          assets/naukri-ninja.exe
        draft: false
        prerelease: false

    # Upload executable as workflow artifact
    - name: Upload executable artifact
      uses: actions/upload-artifact@v4
      with:
        name: naukri-ninja-v${{ steps.get-version.outputs.version }}
        path: assets/naukri-ninja.exe
        retention-days: 7