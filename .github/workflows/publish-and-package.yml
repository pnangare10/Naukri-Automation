name: Publish and Package

on:
  push:
    branches: [ main ]

    # Required permissions for release creation and npm publish
permissions:
  contents: write
  packages: write
  actions: read
  
jobs:
  publish-and-package:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Needed for version bumping

    # Automatic version bumping based on commit messages
    - name: Bump version
      id: version-bump
      uses: phips28/gh-action-bump-version@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag-prefix: 'v'
        minor-wording: 'feat,feature'
        major-wording: 'major,breaking'
        patch-wording: 'fix,patch,refactor'
        rc-wording: 'rc,alpha,beta'
        skip-tag: 'true'
        
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        registry-url: 'https://registry.npmjs.org'
        cache: 'npm'
      
    - name: Install dependencies
      run: npm ci
      
    - name: Publish to npm
      run: npm publish --access public
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      
    - name: Install pkg
      run: npm install pkg
      
    - name: Package application
      run: |  
        mkdir -p assets
        npx pkg . --output ./assets/naukri-ninja.exe --targets node18-win-x64
      
    # Get commit messages since last release
    - name: Get Commit Messages
      id: get_commits
      run: |
        COMMITS=$(git log $(git describe --tags --abbrev=0 2>/dev/null || git rev-list --max-parents=0 HEAD)..HEAD --pretty=format:"- %s")
        echo "COMMITS<<EOF" >> $GITHUB_ENV
        echo "$COMMITS" >> $GITHUB_ENV
        echo "EOF" >> $GITHUB_ENV

    # Create GitHub release with the executable
    - name: Create Release
      uses: softprops/action-gh-release@v1
      if: success()
      with:
        tag_name: v${{ steps.version-bump.outputs.newVersion }}
        name: "Release v${{ steps.version-bump.outputs.newVersion }}"
        body: |
          Automated release for Naukri Ninja
          Version: ${{ steps.version-bump.outputs.newVersion }}
          Build: ${{ github.run_number }}
          
          Changes:
          ${{ env.COMMITS }}
        draft: false
        prerelease: false
        files: |
          assets/naukri-ninja.exe

    - name: Upload executable artifact
      uses: actions/upload-artifact@v4
      with:
        name: naukri-ninja-v${{ steps.version-bump.outputs.newVersion }}
        path: assets/naukri-ninja.exe
        retention-days: 7
